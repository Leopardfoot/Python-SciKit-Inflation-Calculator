 For this class ScikitTest I decided to read from the data from the csv file and populate a Python Dictionary with the column data with the years serving as the key and the CPI as the value. By sourcing from the csv, the data is kept in a file format that is easy for users to edit and add new entries with various user interface tools. Reading the data and populating it into a Python dictionary was sensible as we know each year is a unique entry which we want to keep as a static reference tool to match to the same year as will be input into our function. This makes the year prime for being a key to look up the corresponding CPI value which will be used by our transform function to calculate the percentage value of inflation and adjust the price to the return value. The exact math for the CPI function was sourced from Bureau of Labor Statistics formula for determining inflation by CPI.

 Although the use of read csv to python dictionary is not the fastest and most memory efficient method, it is provides the ease of use in the code with the dictionary's key value pairs as well as general readability and flexibility of use that comes with sourcing from the csv file.